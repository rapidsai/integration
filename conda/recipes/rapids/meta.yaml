# Copyright (c) 2019-2023, NVIDIA CORPORATION.

{% set rapids_version = environ.get('GIT_DESCRIBE_TAG', '0.0.0.dev').lstrip('v') %}
{% set major_minor_version = rapids_version.split('.')[0] + '.' + rapids_version.split('.')[1] %}
{% set cuda_version = '.'.join(environ['RAPIDS_CUDA_VERSION'].split('.')[:2]) %}
{% set cuda_major = cuda_version.split('.')[0] %}
{% set py_version = environ['CONDA_PY'] %}
{% set date_string = environ['RAPIDS_DATE_STRING'] %}

###
# Versions referenced below are set in `conda/recipe/*versions.yaml` except for
#   those set above (e.g. `cuda_version`)
###

package:
  name: rapids
  version: {{ rapids_version }}

source:
  git_url: ../../..

build:
  number: {{ GIT_DESCRIBE_NUMBER }}
  string: cuda{{ cuda_major }}_py{{ py_version }}_{{ date_string }}_{{ GIT_DESCRIBE_HASH }}_{{ GIT_DESCRIBE_NUMBER }}

requirements:
  host:
    - python
    - cuda-version ={{ cuda_version }}
  run:
    - {{ pin_compatible('cuda-version', max_pin='x', min_pin='x') }}
    {% if cuda_major == "11" %}
    - cuda-python {{ cuda11_cuda_python_version }}
    - cudatoolkit
    {% else %}
    - cuda-python {{ cuda12_cuda_python_version }}
    {% endif %}
    - cupy {{ cupy_version }}
    - nccl {{ nccl_version }}
    - networkx {{ networkx_version }}
    - numba {{ numba_version }}
    - numpy {{ numpy_version }}
    - nvtx {{ nvtx_version }}
    - python
    - cudf ={{ major_minor_version }}.*
    - cugraph ={{ major_minor_version }}.*
    - cuml ={{ major_minor_version }}.*
    - cucim ={{ major_minor_version }}.*
    - cuspatial ={{ major_minor_version }}.*
    - cuproj ={{ major_minor_version }}.*
    - custreamz ={{ major_minor_version }}.*
    - cuxfilter ={{ major_minor_version }}.*
    - dask-cuda ={{ major_minor_version }}.*
    - rapids-xgboost ={{ major_minor_version }}.*
    - rmm ={{ major_minor_version }}.*
    - pylibcugraph ={{ major_minor_version }}.*
    - libcugraph_etl ={{ major_minor_version }}.*
    {% if cuda_major == "11" %}
    - cusignal ={{ major_minor_version }}.*
    - ptxcompiler  # CUDA enhanced compat. See https://github.com/rapidsai/ptxcompiler
    {% endif %}
    - conda-forge::ucx-proc=*=gpu
    - conda-forge::ucx {{ ucx_version }}

test:
  requires:
    - cuda-version ={{ cuda_version }}
  commands:
    - exit 0

about:
  home: https://rapids.ai/
  license: Custom
  license_file: conda/recipes/rapids/LICENSE
  summary: 'RAPIDS Suite - Open GPU Data Science'
  description: |
    Meta-package for the RAPIDS suite of software libraries. RAPIDS gives you the freedom to execute end-to-end data science
    and analytics pipelines entirely on GPUs. It relies on NVIDIA® CUDA® primitives for low-level compute optimization,
    but exposes that GPU parallelism and high-bandwidth memory speed through user-friendly Python interfaces.
  doc_url: https://docs.rapids.ai/
  dev_url: https://github.com/rapidsai/
